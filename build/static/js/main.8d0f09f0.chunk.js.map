{"version":3,"sources":["i18n.js","components/languageSelector/LanguageSelector.jsx","components/navigation/navigation.jsx","components/home/about.jsx","components/home/header.jsx","components/home/services.jsx","components/home/contact.jsx","components/home/home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["resources","en","translation","se","fa","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","LanguageSelector","_ref","t","languageOptions","setLanguage","currentLanguage","selectStyle","option","provided","state","Object","objectSpread","boxShadow","control","base","border","react_default","a","createElement","className","react_select_esm","classNamePrefix","styles","options","defaultValue","find","value","onChange","e","Navigation","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","languageSelector_LanguageSelector","About","props","id","Container","Row","Col","xs","md","src","alt","lg","sm","returnObjects","map","d","i","key","concat","Header","language","badgeLanguage","setBadgeLanguage","useEffect","size","offset","Services","name","icon","text","Contact","Home","Fragment","home_header","about","services","home_contact","dotenv","config","withTranslation","_useState3","label","_useState4","setLanguageOptions","changeLanguage","languageOptionsJson","JSON","parse","process","error","navigation_navigation","react_router","exact","path","home_home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"q6OAQMA,EAAY,CAChBC,GAAI,CACFC,mBAEFC,GAAI,CACFD,mBAEFE,GAAI,CACFF,oBAIJG,IACGC,IAAIC,KACJC,KAAK,CACJR,YACAS,IAAK,KAILC,cAAe,CACbC,aAAa,KAIJN,QAAf,kFCFeO,MA3Bf,SAAAC,GAAgFA,EAApDC,EAAoD,IAAjDC,EAAiDF,EAAjDE,gBAAiBC,EAAgCH,EAAhCG,YAAaC,EAAmBJ,EAAnBI,gBACnDC,EAAc,CAChBC,OAAQ,SAACC,EAAUC,GAAX,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACDF,EADC,CAEJI,UAAW,UAEfC,QAAS,SAAAC,GAAI,OAAAJ,OAAAC,EAAA,EAAAD,CAAA,GACNI,EADM,CAETC,OAAQ,EAERH,UAAW,WAInB,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAD,UAAU,eACVE,gBAAgB,eAChBC,OAAQhB,EACRiB,QAASpB,EACTqB,aAAcrB,EAAgBsB,KAAK,SAAAlB,GAAM,OAAIA,EAAOmB,QAAUrB,IAC9DsB,SAAU,SAAAC,GAAC,OAAIxB,EAAYwB,EAAEF,kBCiB1BG,MArCf,SAAA5B,GAA0E,IAApDC,EAAoDD,EAApDC,EAAGC,EAAiDF,EAAjDE,gBAAiBC,EAAgCH,EAAhCG,YAAaC,EAAmBJ,EAAnBI,gBAAmByB,EAC5CC,oBAAS,GADmCC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAoB,EAAA,GACjEI,EADiEF,EAAA,GACzDG,EADyDH,EAAA,GAKxE,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,MAAM,QAAQlB,UAAU,aAAamB,OAAK,EAACC,OAAO,MACxDvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAarB,UAAU,mBAAmBsB,KAAK,MAC5CvC,EAAE,YAELc,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAeC,QARN,kBAAMR,GAAWD,MAS1BlB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,GAC9B7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAK3B,UAAU,UAAU0B,QAAM,GAC7B7B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASP,KAAK,WAAWtB,UAAU,mBAAmBjB,EAAE,4BAE1Dc,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASP,KAAK,cAActB,UAAU,mBAAmBjB,EAAE,+BAE7Dc,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASP,KAAK,aAAatB,UAAU,mBAAmBjB,EAAE,8BAE5Dc,EAAAC,EAAAC,cAAC+B,EAAD,CACE9B,UAAU,GACVjB,EAAGA,EACHE,YAAaA,EACbD,gBAAiBA,EACjBE,gBAAiBA,oCCChB6C,MA/Bf,SAAeC,GAAO,IACZjD,EAAMiD,EAANjD,EACR,OACEc,EAAAC,EAAAC,cAAA,OAAKkC,GAAG,SACNpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACdzC,EAAAC,EAAAC,cAAA,OAAKwC,IAAI,wBAAwBvC,UAAU,iBAAiBwC,IAAI,KAAM,KAExE3C,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACbzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAKhB,EAAE,gBACPc,EAAAC,EAAAC,cAAA,SAAIhB,EAAE,oBACNc,EAAAC,EAAAC,cAAA,UAAKhB,EAAE,iBACPc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKK,GAAG,KAAKC,GAAG,KAAKL,GAAG,MACtBxC,EAAAC,EAAAC,cAAA,UACGhB,EAAE,YAAa,CAAE4D,eAAe,IAC7B5D,EAAE,YAAa,CAAE4D,eAAe,IAAQC,IAAI,SAACC,EAAGC,GAAJ,OAAUjD,EAAAC,EAAAC,cAAA,MAAIgD,IAAG,GAAAC,OAAKH,EAAL,KAAAG,OAAUF,IAAMD,KAC7E,yBCyBTI,MA1Cf,SAAgBjB,GAAO,IACbjD,EAAMiD,EAANjD,EAEFG,EAAkBZ,EAAK4E,SAHRvC,EAIqBC,mBAAS,MAJ9BC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAoB,EAAA,GAIdwC,EAJctC,EAAA,GAICuC,EAJDvC,EAAA,GASrB,OAHAwC,oBAAU,WACRD,EAAiBlE,IAChB,CAACA,IAEFW,EAAAC,EAAAC,cAAA,UAAQkC,GAAG,UACTpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKE,GAAI,CAAEgB,KAAM,EAAGC,OAAQ,GAAKvD,UAAU,cACzCH,EAAAC,EAAAC,cAAA,UAAKhB,EAAE,iBACPc,EAAAC,EAAAC,cAAA,SAAIhB,EAAE,qBACNc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBjB,EAAE,sBACxCc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBsB,KAAK,aACpCzB,EAAAC,EAAAC,cAAA,OACEwC,IAAG,cAAAS,OAAgBG,EAAhB,0BACHX,IAAI,kBACJxC,UAAU,2BAGdH,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,YAAYtB,UAAU,mBAC5BH,EAAAC,EAAAC,cAAA,OACEwC,IAAG,cAAAS,OAAgBG,EAAhB,wBACHX,IAAI,gBACJxC,UAAU,gCCLfwD,MA7Bf,SAAkBxB,GAAO,IACfjD,EAAMiD,EAANjD,EAER,OACEc,EAAAC,EAAAC,cAAA,OAAKkC,GAAG,WAAWjC,UAAU,eAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKhB,EAAE,yBACPc,EAAAC,EAAAC,cAAA,SAAIhB,EAAE,6BAERc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZjB,EAAE,oBAAqB,CAAE4D,eAAe,IACrC5D,EAAE,oBAAqB,CAAE4D,eAAe,IAAQC,IAAI,SAACC,EAAGC,GAAJ,OAClDjD,EAAAC,EAAAC,cAAA,OAAKgD,IAAG,GAAAC,OAAKH,EAAEY,KAAP,KAAAT,OAAeF,GAAK9C,UAAU,YACnC,IACDH,EAAAC,EAAAC,cAAA,KAAGC,UAAW6C,EAAEa,OAChB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAK8C,EAAEY,MACP5D,EAAAC,EAAAC,cAAA,SAAI8C,EAAEc,UAIZ,oBCkDCC,MArEf,SAAiB5B,GAAO,IACdjD,EAAMiD,EAANjD,EAER,OACIc,EAAAC,EAAAC,cAAA,OAAKkC,GAAG,WACNpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKE,GAAG,KACNzC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKhB,EAAE,0BAIbc,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKE,GAAI,CAACgB,KAAM,GAAItD,UAAU,gBAC5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADf,IACwCjB,EAAE,mBAD1C,KAEQ,IACPA,EAAE,wBAGPc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,IACmCjB,EAAE,SADrC,KAEQ,IACPA,EAAE,mBAGPc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADf,IACwCjB,EAAE,SAD1C,KAEQ,IACPA,EAAE,oBAITc,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKE,GAAG,MACNzC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEuB,KAAMvC,EAAE,qBAERc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAGjBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGuB,KAAMvC,EAAE,oBACTc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAGjBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGuB,KAAMvC,EAAE,oBACTc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BCxCpB6D,SAbF,SAAC7B,GAAU,IACdjD,EAAMiD,EAANjD,EACR,OACEc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,CAAQhF,EAAGA,IACXc,EAAAC,EAAAC,cAACiE,EAAD,CAAOjF,EAAGA,IACVc,EAAAC,EAAAC,cAACkE,EAAD,CAAUlF,EAAGA,IAEbc,EAAAC,EAAAC,cAACmE,EAAD,CAASnF,EAAGA,OCLlBoF,IAAOC,SA+BQC,oBA7Bf,SAAAvF,GAAoB,IAALC,EAAKD,EAALC,EAAK4B,EAEcC,mBAAS,MAFvBC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAoB,EAAA,GAEXuC,EAFWrC,EAAA,GAED5B,EAFC4B,EAAA,GAAAyD,EAG4B1D,mBAAS,CAAC,CAAEL,MAAO,KAAMgE,MAAO,QAH5DC,EAAAjF,OAAAuB,EAAA,EAAAvB,CAAA+E,EAAA,GAGXtF,EAHWwF,EAAA,GAGMC,EAHND,EAAA,GAmBlB,OAdAnB,oBAAU,WACR/E,EAAKoG,eAAexB,IACnB,CAACA,IAEJG,oBAAU,WAER,IACE,IAAIsB,EAAsBC,KAAKC,MAFHC,2CAG5BL,EAAmBE,GACnB,MAAOI,MAGR,IAGDlF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgE,SAAA,KACEjE,EAAAC,EAAAC,cAACiF,EAAD,CAAYjG,EAAGA,EAAGE,YAAaA,EAAaC,gBAAiBgE,EAAUlE,gBAAiBA,IACtFa,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,MAChBtF,EAAAC,EAAAC,cAACqF,EAAD,CAAMrG,EAAGA,QCzBCsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,WAAP,KACE/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,KACEhG,EAAAC,EAAAC,cAAC+F,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAxB,GACLyB,QAAQzB,MAAMA,EAAM0B","file":"static/js/main.8d0f09f0.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next  } from \"react-i18next\";\r\n\r\nimport translationEN from './locales/en/translation.json';\r\nimport translationSE from './locales/se/translation.json';\r\nimport translationFA from './locales/fa/translation.json';\r\n\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  se: {\r\n    translation: translationSE\r\n  },\r\n  fa: {\r\n    translation: translationFA\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next ) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n\r\n    // keySeparator: '.', // we do use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport Select from 'react-select'\r\nimport './languageSelector.css';\r\n\r\nfunction LanguageSelector({ t, languageOptions, setLanguage, currentLanguage }) {\r\n    const selectStyle = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            boxShadow: \"none\",\r\n        }),\r\n        control: base => ({\r\n            ...base,\r\n            border: 0,\r\n            // This line disable the blue border\r\n            boxShadow: 'none'\r\n          })\r\n    }\r\n\r\n    return (\r\n        <div className='apurini-language-selector navbar-default .navbar-nav'>\r\n            <Select \r\n            className=\"react-select\"\r\n            classNamePrefix=\"react-select\"\r\n            styles={selectStyle} \r\n            options={languageOptions} \r\n            defaultValue={languageOptions.find(option => option.value === currentLanguage)}\r\n            onChange={e => setLanguage(e.value)} \r\n            />\r\n        </div>)\r\n}\r\n\r\nexport default LanguageSelector;","import React, { useState } from \"react\";\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LanguageSelector from \"../languageSelector/LanguageSelector\";\r\nimport \"./navigation.css\";\r\n\r\nfunction Navigation({ t, languageOptions, setLanguage, currentLanguage }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color='light' className='navigation' light expand='md'>\r\n        <NavbarBrand className='navigation-brand' href='./'>\r\n          {t(\"apurini\")}\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className='mr-auto' navbar>\r\n            <NavItem>\r\n              <NavLink href='./#about' className=\"navigation-link\">{t(\"about.navigation-title\")}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href='./#services' className=\"navigation-link\">{t(\"services.navigation-title\")}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href='./#contact' className=\"navigation-link\">{t(\"contact.navigation-title\")}</NavLink>\r\n            </NavItem>\r\n            <LanguageSelector\r\n              className=''\r\n              t={t}\r\n              setLanguage={setLanguage}\r\n              languageOptions={languageOptions}\r\n              currentLanguage={currentLanguage}\r\n            />\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nfunction About(props) {\r\n  const { t } = props;\r\n  return (\r\n    <div id='about'>\r\n      <Container>\r\n        <Row>\r\n          <Col xs='12' md='6'>\r\n            <img src='img/about-trimmed.png' className='img-responsive' alt='' />{\" \"}\r\n          </Col>\r\n          <Col xs='8' md='6'>\r\n            <div className='about-text'>\r\n              <h2>{t(\"about.title\")}</h2>\r\n              <p>{t(\"about.paragraph\")}</p>\r\n              <h3>{t(\"about.title2\")}</h3>\r\n              <div className='list-style'>\r\n                <Col lg='12' sm='12' xs='12'>\r\n                  <ul>\r\n                    {t(\"about.why\", { returnObjects: true })\r\n                      ? t(\"about.why\", { returnObjects: true }).map((d, i) => <li key={`${d}-${i}`}>{d}</li>)\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </Col>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport \"./header.css\";\r\n\r\nimport i18n from \"../../i18n\";\r\n\r\nfunction Header(props) {\r\n  const { t } = props;\r\n\r\n  const currentLanguage = i18n.language;\r\n  const [badgeLanguage, setBadgeLanguage] = useState(\"en\");\r\n\r\n  useEffect(() => {\r\n    setBadgeLanguage(currentLanguage);\r\n  }, [currentLanguage]);\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n          <Container>\r\n            <Row>\r\n              <Col md={{ size: 6, offset: 1 }} className='intro-text'>\r\n                <h1>{t(\"header.title\")}</h1>\r\n                <p>{t(\"header.paragraph\")}</p>\r\n                <p className='mobile-app-badge-text'>{t(\"header.appMessage\")}</p>\r\n                <a className='google-play-badge' href='#features'>\r\n                  <img\r\n                    src={`img/badges/${badgeLanguage}/google-play-badge.png`}\r\n                    alt='googlePlayBadge'\r\n                    className='google-play-badge-img'\r\n                  ></img>\r\n                </a>\r\n                <a href='#features' className='app-store-badge'>\r\n                  <img\r\n                    src={`img/badges/${badgeLanguage}/app-store-badge.svg`}\r\n                    alt='appStoreBadge'\r\n                    className='app-store-badge-img'\r\n                  ></img>\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Services(props) {\r\n  const { t } = props;\r\n\r\n  return (\r\n    <div id=\"services\" className=\"text-center\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title\">\r\n          <h2>{t(\"services.ourServices\")}</h2>\r\n          <p>{t(\"services.ourServiceText\")}</p>\r\n        </div>\r\n        <div className=\"row\">\r\n          {t(\"services.contents\", { returnObjects: true })\r\n            ? t(\"services.contents\", { returnObjects: true }).map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\r\n                  {\" \"}\r\n                  <i className={d.icon}></i>\r\n                  <div className=\"service-desc\">\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"loading\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Services;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport \"./contact.css\";\r\n\r\nfunction Contact(props) {\r\n  const { t } = props;\r\n\r\n  return (\r\n      <div id=\"contact\">\r\n        <Container>\r\n          <Col md=\"8\">\r\n            <Row>\r\n              <div className=\"section-title\">\r\n                <h2>{t(\"contact.getInTouch\")}</h2>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n          <Col md={{size: 3}} className=\"contact-info\">\r\n            <div className=\"contact-item\">\r\n              <p>\r\n                <span>\r\n                  <i className=\"fa fa-map-marker\"></i> {t(\"contact.address\")}:\r\n                </span>{\" \"}\r\n                {t(\"contact.ourAddress\")}\r\n              </p>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <p>\r\n                <span>\r\n                  <i className=\"fa fa-phone\"></i> {t(\"phone\")}:\r\n                </span>{\" \"}\r\n                {t(\"contact.phone\")}\r\n              </p>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <p>\r\n                <span>\r\n                  <i className=\"fa fa-envelope-o\"></i> {t(\"email\")}:\r\n                </span>{\" \"}\r\n                {t(\"contact.email\")}\r\n              </p>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <Row>\r\n              <div className=\"social\">\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href={t(\"contact.facebook\")}\r\n                    >\r\n                      <i className=\"fa fa-facebook\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={t(\"contact.twitter\")}>\r\n                      <i className=\"fa fa-twitter\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={t(\"contact.youtube\")}>\r\n                      <i className=\"fa fa-youtube\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n        </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport About from \"./about.jsx\";\r\nimport Header from \"./header.jsx\";\r\nimport Services from \"./services.jsx\";\r\n// import Team from './team.jsx'\r\nimport Contact from \"./contact.jsx\";\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = (props) => {\r\n  const { t } = props;\r\n  return (\r\n    <>\r\n      <Header t={t} />\r\n      <About t={t} />\r\n      <Services t={t} />\r\n      {/* <Team t={t} /> */}\r\n      <Contact t={t} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import dotenv from \"dotenv\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"./i18n.js\";\r\n\r\nimport Navigation from \"./components/navigation/navigation\";\r\nimport Home from \"./components/home/home.jsx\";\r\n\r\ndotenv.config();\r\n\r\nfunction App({ t }) {\r\n\r\n  const [language, setLanguage] = useState(\"en\");\r\n  const [languageOptions, setLanguageOptions] = useState([{ value: \"en\", label: \"EN\" }]);\r\n\r\n  useEffect(() => {\r\n    i18n.changeLanguage(language);\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    const languageOptionsString = process.env.REACT_APP_LANGUAGE_OPTIONS;\r\n    try {\r\n      var languageOptionsJson = JSON.parse(languageOptionsString);\r\n      setLanguageOptions(languageOptionsJson);\r\n    } catch (error) {\r\n      // TODO: add error handling here\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navigation t={t} setLanguage={setLanguage} currentLanguage={language} languageOptions={languageOptions} />\r\n        <Route exact path='./'>\r\n          <Home t={t} />\r\n        </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withTranslation()(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter  } from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}